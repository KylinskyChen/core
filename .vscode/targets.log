make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** 没有规则可制作目标“all”。 停止。
 
# GNU Make 4.1
# 为 x86_64-pc-linux-gnu 编译
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# 许可证：GPLv3+：GNU 通用公共许可证第 3 版或更新版本<http://gnu.org/licenses/gpl.html>。
# 本软件是自由软件：您可以自由修改和重新发布它。
# 在法律允许的范围内没有其他保证。

# make 数据基础，打印在 Thu Apr  8 16:27:51 2021

# 变量

# “override”指令
GNUMAKEFLAGS := 
# 自动
<D = $(patsubst %/,%,$(dir $<))
# makefile (从“Makefile”，行 112)
KINCLUDE = kern/debug/ kern/driver/ kern/trap/ kern/mm/
# 自动
?F = $(notdir $?)
# 环境
DESKTOP_SESSION = i3
# 默认
.SHELLFLAGS := -c
# makefile (从“Makefile”，行 10)
QEMU := qemu-system-i386
# makefile (从“tools/function.mk”，行 107)
add_dependency = $(eval $(1): $(2))
# makefile (从“Makefile”，行 63)
create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))
# 环境
XDG_SESSION_TYPE = x11
# makefile (从“Makefile”，行 71)
asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)
# 自动
?D = $(patsubst %/,%,$(dir $?))
# 自动
@D = $(patsubst %/,%,$(dir $@))
# 环境
XAUTHORITY = /run/user/1000/gdm/Xauthority
# 环境
GDMSESSION = i3
# 环境
XMODIFIERS = @im=fcitx
# makefile
CURDIR := /home/xiechen/14.core
# makefile
SHELL = /bin/sh
# makefile (从“Makefile”，行 42)
RM := rm -f
# makefile (从“Makefile”，行 6)
V := @
# 环境
VSCODE_NLS_CONFIG = {"locale":"zh-cn","availableLanguages":{},"_languagePackSupport":true}
# makefile (从“Makefile”，行 168)
ALLDEPS = $(ALLOBJS:.o=.d)
# 环境
_ = /usr/share/code/bin/../code
# makefile (从“tools/function.mk”，行 94)
cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))
# makefile (从“Makefile”，行 80)
CFLAGS := -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/
# 环境
XDG_CONFIG_DIRS = /etc/xdg/xdg-i3:/etc/xdg/xdg-ubuntu:/etc/xdg
# makefile (从“tools/function.mk”，行 64)
define do_add_objs_to_packet
__temp_packet__ := $(call packetname,$(2))
ifeq ($$(origin $$(__temp_packet__)),undefined)
$$(__temp_packet__) :=
endif
$$(__temp_packet__) += $(1)
endef
# makefile (从“tools/function.mk”，行 48)
do_cc_compile = $$(foreach f,$(1),$$(eval $$(call cc_template,$$(f),$(2),$(3),$(4))))
# makefile (从“tools/function.mk”，行 1)
MAKEFILE_LIST :=  Makefile tools/function.mk
# 自动
@F = $(notdir $@)
# 环境
IM_CONFIG_PHASE = 2
# makefile (从“tools/function.mk”，行 53)
define do_add_files_to_packet
__temp_packet__ := $(call packetname,$(4))
ifeq ($$(origin $$(__temp_packet__)),undefined)
$$(__temp_packet__) :=
endif
__temp_objs__ := $(call toobj,$(1),$(5))
$$(foreach f,$(1),$$(eval $$(call cc_template,$$(f),$(2),$(3),$(5))))
$$(__temp_packet__) += $$(__temp_objs__)
endef
# 环境
USERNAME = xiechen
# makefile (从“Makefile”，行 23)
HOSTCC := gcc
# 环境
MAKELEVEL := 0
# 环境
MANDATORY_PATH = /usr/share/gconf/i3.mandatory.path
# 环境
XDG_DATA_DIRS = /usr/share/i3:/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# makefile (从“Makefile”，行 39)
COPY := cp
# 环境
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# 环境
VSCODE_LOGS = /home/xiechen/.config/Code/logs/20210408T162723
# makefile (从“Makefile”，行 43)
AWK := awk
# 环境
CLUTTER_IM_MODULE = xim
# 环境
VSCODE_IPC_HOOK_EXTHOST = /tmp/vscode-ipc-17415039-4f4c-4fd0-88bb-73c198cadc0c.sock
# 环境
LC_NAME = zh_CN.UTF-8
# 默认
MAKE_HOST := x86_64-pc-linux-gnu
# 环境
PATH = /home/xiechen/.local/bin:/home/xiechen/3.software/scitools/bin/linux64:/home/xiechen/3.software/eclipse-cpp-2020-03-R-incubation-linux-gtk-x86_64/eclipse:/usr/local/sunlogin/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf/bin:/snap/bin
# makefile (从“Makefile”，行 92)
bootblock = $(call totarget,bootblock)
# makefile (从“Makefile”，行 31)
LD := ld
# makefile (从“Makefile”，行 89)
bootfiles = $(call listf_cc,boot)
# makefile (从“Makefile”，行 157)
IGNORE_ALLDEPS = clean dist-clean grade touch print-.+ handin
# 环境
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# 环境
SESSION_MANAGER = local/xiechen-Ubuntu:@/tmp/.ICE-unix/19743,unix/xiechen-Ubuntu:/tmp/.ICE-unix/19743
# makefile (从“tools/function.mk”，行 73)
define do_create_target
__temp_target__ = $(call totarget,$(1))
__temp_objs__ = $$(foreach p,$(call packetname,$(2)),$$($$(p))) $(3)
TARGETS += $$(__temp_target__)
ifneq ($(4),)
$$(__temp_target__): $$(__temp_objs__) | $$$$(dir $$$$@)
	$(V)$(4) $(5) $$^ -o $$@
else
$$(__temp_target__): $$(__temp_objs__) | $$$$(dir $$$$@)
endif
endef
# makefile (从“Makefile”，行 131)
kernel = $(call totarget,kernel)
# 环境
XDG_RUNTIME_DIR = /run/user/1000
# makefile (从“Makefile”，行 70)
objfile = $(call toobj,$(1))
# 环境
TEXTDOMAIN = im-config
# makefile (从“tools/function.mk”，行 97)
add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))
# makefile (从“Makefile”，行 126)
__temp_packet__ := __objs_kernel
# 环境
XDG_MENU_PREFIX = gnome-
# 环境
VSCODE_LOG_STACK = false
# 环境
ELECTRON_RUN_AS_NODE = 1
# makefile (从“Makefile”，行 34)
LDFLAGS := -m    elf_i386 -nostdlib
# 默认
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# 环境
XDG_SESSION_DESKTOP = i3
# 环境
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# makefile (从“tools/function.mk”，行 105)
read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))
# 自动
%F = $(notdir $%)
# makefile (从“Makefile”，行 1)
PROJ := challenge
# 环境
DISPLAY = :1
# makefile (从“Makefile”，行 46)
TR := tr
# 环境
GTK_IM_MODULE = fcitx
# makefile (从“Makefile”，行 2)
EMPTY := 
# 环境
PWD = /home/xiechen/14.core
# makefile (从“Makefile”，行 24)
HOSTCFLAGS := -g -Wall -O2
# makefile (从“tools/function.mk”，行 38)
define cc_template
$$(call todep,$(1),$(4)): $(1) | $$$$(dir $$$$@)
	@$(2) -I$$(dir $(1)) $(3) -MM $$< -MT "$$(patsubst %.d,%.o,$$@) $$@"> $$@
$$(call toobj,$(1),$(4)): $(1) | $$$$(dir $$$$@)
	@echo + cc $$<
	$(V)$(2) -I$$(dir $(1)) $(3) -c $$< -o $$@
ALLOBJS += $$(call toobj,$(1),$(4))
endef
# 环境
XDG_SEAT = seat0
# makefile (从“Makefile”，行 153)
__temp_target__ = bin/ucore.img
# 环境
SSH_AGENT_PID = 19885
# makefile (从“tools/function.mk”，行 100)
add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))
# 环境
GTK_MODULES = gail:atk-bridge
# 环境
HOME = /home/xiechen
# makefile (从“Makefile”，行 4)
SLASH := /
# makefile (从“Makefile”，行 44)
SED := sed
# makefile (从“Makefile”，行 59)
listf_cc = $(call listf,$(1),$(CTYPE))
# makefile (从“Makefile”，行 76)
match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)
# 环境
VSCODE_CLI = 1
# makefile (从“tools/function.mk”，行 27)
totarget = $(addprefix $(BINDIR)$(SLASH),$(1))
# 环境
LOGNAME = xiechen
# 环境
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# 自动
+F = $(notdir $+)
# 环境
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# 默认
MAKE_VERSION := 4.1
# 环境
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# 自动
^D = $(patsubst %/,%,$(dir $^))
# makefile (从“Makefile”，行 40)
MKDIR := mkdir -p
# 环境
XDG_VTNR = 2
# makefile (从“Makefile”，行 126)
 
__objs_kernel :=  obj/kern/init/init.o obj/kern/libs/stdio.o obj/kern/libs/readline.o obj/kern/debug/panic.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/picirq.o obj/kern/driver/intr.o obj/kern/trap/trap.o obj/kern/trap/vectors.o obj/kern/trap/trapentry.o obj/kern/mm/pmm.o
# makefile (从“Makefile”，行 84)
__objs_libs :=  obj/libs/string.o obj/libs/printfmt.o
# 环境
LC_TIME = zh_CN.UTF-8
# 环境
VERBOSE_LOGGING = true
# 默认
MAKE = $(MAKE_COMMAND)
# 默认
MAKECMDGOALS := all
# 环境
QT_IM_MODULE = fcitx
# makefile (从“Makefile”，行 128)
KOBJS = $(call read_packet,kernel libs)
# makefile (从“Makefile”，行 153)
__temp_objs__ = $(foreach p,__objs_,$($(p))) 
# 环境
SHLVL = 2
# makefile (从“Makefile”，行 50)
BINDIR := bin
# makefile (从“Makefile”，行 25)
CC := gcc
# 环境
XDG_SESSION_ID = 29
# 环境
AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# 环境
USER = xiechen
# 环境
LC_MONETARY = zh_CN.UTF-8
# makefile
.DEFAULT_GOAL := obj/libs/string.d
# makefile (从“tools/function.mk”，行 31)
packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))
# makefile (从“Makefile”，行 78)
INCLUDE = libs/
# 环境
XDG_CURRENT_DESKTOP = i3
# makefile (从“Makefile”，行 69)
cgtype = $(patsubst %.$(2),%.$(3),$(1))
# makefile (从“tools/function.mk”，行 25)
todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))
# 环境
PIPE_LOGGING = true
# 自动
%D = $(patsubst %/,%,$(dir $%))
# 环境
LC_TELEPHONE = zh_CN.UTF-8
# makefile (从“Makefile”，行 8)
GCCPREFIX := 
# 默认
MAKE_COMMAND := make
# 环境
VSCODE_NODE_CACHED_DATA_DIR = /home/xiechen/.config/Code/CachedData/d69a79b73808559a91206d73d7717ff5f798f23c
# makefile (从“Makefile”，行 82)
LIBDIR = libs
# makefile (从“Makefile”，行 124)
KCFLAGS = $(addprefix -I,$(KINCLUDE))
# 默认
.VARIABLES := 
# 自动
*F = $(notdir $*)
# 环境
LANGUAGE = zh_CN:zh:en_US:en
# 环境
VSCODE_IPC_HOOK = /run/user/1000/vscode-e7f1d6f7-1.45.0-main.sock
# makefile (从“tools/function.mk”，行 103)
create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))
# makefile (从“Makefile”，行 29)
CTYPE := c S
# makefile (从“Makefile”，行 153)
TARGETS :=  bin/bootblock bin/sign bin/kernel bin/ucore.img
# makefile (从“Makefile”，行 66)
add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))
# makefile
MAKEFLAGS = pqrR
# 环境
MFLAGS = -pqrR
# 自动
*D = $(patsubst %/,%,$(dir $*))
# makefile (从“Makefile”，行 146)
UCOREIMG := bin/ucore.img
# makefile (从“Makefile”，行 106)
__objs_sign :=  obj/sign/tools/sign.o
# 自动
+D = $(patsubst %/,%,$(dir $+))
# makefile (从“Makefile”，行 37)
OBJDUMP := objdump
# 环境
LC_PAPER = zh_CN.UTF-8
# 环境
S_COLORS = auto
# 环境
QT_ACCESSIBILITY = 1
# 环境
DEFAULTS_PATH = /usr/share/gconf/i3.default.path
# makefile (从“Makefile”，行 73)
symfile = $(call cgtype,$(call toobj,$(1)),o,sym)
# makefile (从“Makefile”，行 62)
add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))
# 环境
TEXTDOMAINDIR = /usr/share/locale/
# makefile (从“tools/function.mk”，行 86)
define do_finish_all
ALLDEPS = $$(ALLOBJS:.o=.d)
$$(sort $$(dir $$(ALLOBJS)) $(BINDIR)$(SLASH) $(OBJDIR)$(SLASH)):
	@$(MKDIR) $$@
endef
# 默认
MAKEFILES := 
# 环境
LC_NUMERIC = zh_CN.UTF-8
# 自动
<F = $(notdir $<)
# makefile (从“Makefile”，行 45)
SH := sh
# makefile (从“Makefile”，行 126)
ALLOBJS :=  obj/libs/string.o obj/libs/printfmt.o obj/boot/bootasm.o obj/boot/bootmain.o obj/sign/tools/sign.o obj/kern/init/init.o obj/kern/libs/stdio.o obj/kern/libs/readline.o obj/kern/debug/panic.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/picirq.o obj/kern/driver/intr.o obj/kern/trap/trap.o obj/kern/trap/vectors.o obj/kern/trap/trapentry.o obj/kern/mm/pmm.o
# makefile (从“Makefile”，行 49)
OBJDIR := obj
# makefile (从“tools/function.mk”，行 20)
toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)), $(addsuffix .o,$(basename $(1))))
# 环境
LC_MEASUREMENT = zh_CN.UTF-8
# 环境
EDITOR = nvim
# 环境
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (从“tools/function.mk”，行 109)
finish_all = $(eval $(call do_finish_all))
# 环境
QT4_IM_MODULE = fcitx
# makefile (从“Makefile”，行 72)
outfile = $(call cgtype,$(call toobj,$(1)),o,out)
# 自动
^F = $(notdir $^)
# makefile (从“Makefile”，行 36)
OBJCOPY := objcopy
# makefile (从“Makefile”，行 41)
MV := mv
# 默认
SUFFIXES := 
# makefile (从“tools/function.mk”，行 1)
OBJPREFIX := __objs_
# makefile (从“Makefile”，行 3)
SPACE := $(subst ,, )
# 环境
CHROME_DESKTOP = code-url-handler.desktop
# 环境
WINDOWPATH = 2
# 默认
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# 环境
LC_IDENTIFICATION = zh_CN.UTF-8
# 默认
.RECIPEPREFIX := 
# makefile (从“Makefile”，行 67)
create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))
# makefile (从“Makefile”，行 47)
TOUCH := touch -c
# 环境
LC_ADDRESS = zh_CN.UTF-8
# makefile (从“Makefile”，行 117)
KSRCDIR = kern/init kern/libs kern/debug kern/driver kern/trap kern/mm
# makefile (从“tools/function.mk”，行 15)
listf = $(filter $(if $(2),$(addprefix %.,$(2)),%), $(wildcard $(addsuffix $(SLASH)*,$(1))))
# 环境
LANG = zh_CN.UTF-8
# 环境
VSCODE_PID = 24020
# 变量的杂凑表状态:
# 负载=181/1024=18%, 重新杂凑=0, 碰撞=312/893=35%

# Pattern-specific 变量值

# 没有 pattern-specific 变量的值。

# 目录

# kern/libs (设备 2049，i-节点 861668)： 4 文件， 无 不可能.
# kern/debug (设备 2049，i-节点 861665)： 9 文件， 无 不可能.
# libs (设备 2049，i-节点 861658)： 11 文件， 无 不可能.
# . (设备 2049，i-节点 861642)： 14 文件， 无 不可能.
# kern/mm (设备 2049，i-节点 861733)： 6 文件， 无 不可能.
# boot (设备 2049，i-节点 861684)： 5 文件， 无 不可能.
# kern/trap (设备 2049，i-节点 861734)： 6 文件， 无 不可能.
# kern/driver (设备 2049，i-节点 861666)： 11 文件， 无 不可能.
# kern/init (设备 2049，i-节点 861667)： 3 文件， 无 不可能.

# 69 文件， 无 不可能在 9 目录中。

# 隐含规则

%.c:

%.S:

%.h:

# 3 条隐含规则，0 (0.0%) 终端。

# 文件

obj/kern/debug/kmonitor.d: kern/debug/kmonitor.c | obj/kern/debug/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/debug/kmonitor.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/debug/kmonitor.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

obj/kern/debug/panic.d: kern/debug/panic.c | obj/kern/debug/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/debug/panic.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/debug/panic.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

obj/kern/mm/pmm.d: kern/mm/pmm.c | obj/kern/mm/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/mm/pmm.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
 
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/mm/pmm.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

bin/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

obj/kern/driver/picirq.o: kern/driver/picirq.c | obj/kern/driver/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/driver/picirq.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/driver/picirq.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

obj/sign/tools/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

qemu: bin/ucore.img
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 186)：
	$(V)$(QEMU) -no-reboot -parallel stdio -hda $< -serial null

obj/kern/libs/readline.d: kern/libs/readline.c | obj/kern/libs/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/libs/readline.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/libs/readline.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

obj/boot/bootasm.d: boot/bootasm.S | obj/boot/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/boot/bootasm.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 90)：
	@gcc -I$(dir boot/bootasm.S) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

# 不是一个目标：
boot/bootasm.S:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/libs/string.o: libs/string.c | obj/libs/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/libs/string.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 84)：
	@echo + cc $<
	@gcc -I$(dir libs/string.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/  -c $< -o $@

obj/boot/bootmain.o: boot/bootmain.c | obj/boot/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/boot/bootmain.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 90)：
	@echo + cc $<
	@gcc -I$(dir boot/bootmain.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c $< -o $@

gdb: bin/ucore.img
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 189)：
	$(V)$(QEMU) -S -s -parallel stdio -hda $< -serial null

bin/sign: obj/sign/tools/sign.o | bin/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := bin/sign
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 107)：
	@gcc -g -Wall -O2 $^ -o $@

obj/kern/debug/kdebug.o: kern/debug/kdebug.c | obj/kern/debug/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/debug/kdebug.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/debug/kdebug.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

obj/sign/tools/sign.o: tools/sign.c | obj/sign/tools/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/sign/tools/sign.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 106)：
	@echo + cc $<
	@gcc -I$(dir tools/sign.c) -g -Wall -O2 -c $< -o $@

# 不是一个目标：
all:
#  命令行目标。
#  对隐含规则的搜索已完成。
#  文件不存在。
#  文件尚未被更新。

.PHONY: bootblock kernel img qemu gdb debug clean
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/libs/stdio.d: kern/libs/stdio.c | obj/kern/libs/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/libs/stdio.d
# 自动
# % := 
# 自动
# * := 
 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/libs/stdio.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

obj/kern/debug/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

# 不是一个目标：
kern/driver/clock.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
kern/trap/trap.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
kern/debug/kmonitor.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/mm/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

# 不是一个目标：
kern/debug/panic.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
kern/mm/pmm.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

bootblock: bin/bootblock
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 175)：
	$(info create bootblock)

.SUFFIXES: .c .S .h
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

kernel: bin/kernel
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 178)：
	$(info create kernel)

obj/kern/init/init.d: kern/init/init.c | obj/kern/init/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/init/init.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/init/init.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

# 不是一个目标：
Makefile:
#  对隐含规则的搜索已完成。
#  最近更新 2021-04-06 08:34:36.214435705
#  文件已经被更新。
#  更新成功。

bin/kernel: obj/kern/init/init.o obj/kern/libs/stdio.o obj/kern/libs/readline.o obj/kern/debug/panic.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/picirq.o obj/kern/driver/intr.o obj/kern/trap/trap.o obj/kern/trap/vectors.o obj/kern/trap/trapentry.o obj/kern/mm/pmm.o obj/libs/string.o obj/libs/printfmt.o tools/kernel.ld | bin/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := bin/kernel
# 自动
# % := 
# 自动
# * := 
# 自动
# + := obj/kern/init/init.o obj/kern/libs/stdio.o obj/kern/libs/readline.o obj/kern/debug/panic.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/picirq.o obj/kern/driver/intr.o obj/kern/trap/trap.o obj/kern/trap/vectors.o obj/kern/trap/trapentry.o obj/kern/mm/pmm.o obj/libs/string.o obj/libs/printfmt.o tools/kernel.ld
# 自动
# | := 
# 自动
# < := obj/kern/init/init.o
# 自动
# ^ := obj/kern/init/init.o obj/kern/libs/stdio.o obj/kern/libs/readline.o obj/kern/debug/panic.o obj/kern/debug/kdebug.o obj/kern/debug/kmonitor.o obj/kern/driver/clock.o obj/kern/driver/console.o obj/kern/driver/picirq.o obj/kern/driver/intr.o obj/kern/trap/trap.o obj/kern/trap/vectors.o obj/kern/trap/trapentry.o obj/kern/mm/pmm.o obj/libs/string.o obj/libs/printfmt.o tools/kernel.ld
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 136)：
	@echo + ld $@
	$(LD) $(LDFLAGS) -T tools/kernel.ld -o $@ $(KOBJS)
	$(OBJDUMP) -S $@ > $(call asmfile,kernel)
	$(OBJDUMP) -t $@ | $(SED) '1,/SYMBOL TABLE/d; s/ .* / /; /^$$/d' > $(call symfile,kernel)

obj/kern/driver/clock.o: kern/driver/clock.c | obj/kern/driver/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/driver/clock.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/driver/clock.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

obj/kern/trap/trap.o: kern/trap/trap.c | obj/kern/trap/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/trap/trap.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/trap/trap.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

# 不是一个目标：
tools/sign.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/debug/kmonitor.o: kern/debug/kmonitor.c | obj/kern/debug/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/debug/kmonitor.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/debug/kmonitor.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

obj/kern/debug/panic.o: kern/debug/panic.c | obj/kern/debug/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/debug/panic.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/debug/panic.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

debug: bin/ucore.img
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 192)：
	$(V)$(QEMU) -S -s -parallel stdio -hda $< -serial null &
	$(V)sleep 2
	$(V)$(TERMINAL)  -e "cgdb -q -x tools/gdbinit"

obj/kern/mm/pmm.o: kern/mm/pmm.c | obj/kern/mm/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/mm/pmm.o
# 自动
 
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/mm/pmm.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

bin/bootblock: obj/boot/bootasm.o obj/boot/bootmain.o | bin/sign bin/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := bin/bootblock
# 自动
# % := 
# 自动
# * := 
# 自动
# + := obj/boot/bootasm.o obj/boot/bootmain.o
# 自动
# | := bin/sign
# 自动
# < := obj/boot/bootasm.o
# 自动
# ^ := obj/boot/bootasm.o obj/boot/bootmain.o
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 95)：
	@echo + ld $@
	$(V)$(LD) $(LDFLAGS) -N -e start -Ttext 0x7C00 $^ -o $(call toobj,bootblock)
	$(V)$(OBJDUMP) -S $(call objfile,bootblock) > $(call asmfile,bootblock)
	$(V)$(OBJCOPY) -S -O binary $(call objfile,bootblock) $(call outfile,bootblock)
	$(V)$(call totarget,sign) $(call outfile,bootblock) $(bootblock)

# 不是一个目标：
kern/libs/stdio.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/libs/readline.o: kern/libs/readline.c | obj/kern/libs/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/libs/readline.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/libs/readline.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

obj/kern/init/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

obj/kern/driver/console.d: kern/driver/console.c | obj/kern/driver/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/driver/console.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/driver/console.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

obj/boot/bootasm.o: boot/bootasm.S | obj/boot/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/boot/bootasm.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 90)：
	@echo + cc $<
	@gcc -I$(dir boot/bootasm.S) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -c $< -o $@

# 不是一个目标：
kern/libs/readline.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/libs/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

obj/boot/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

obj/kern/driver/intr.d: kern/driver/intr.c | obj/kern/driver/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/driver/intr.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/driver/intr.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

obj/kern/libs/stdio.o: kern/libs/stdio.c | obj/kern/libs/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/libs/stdio.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/libs/stdio.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

# 不是一个目标：
.S:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/trap/vectors.o: kern/trap/vectors.S | obj/kern/trap/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/trap/vectors.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/trap/vectors.S) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

# 不是一个目标：
.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
kern/init/init.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
tools/function.mk:
#  对隐含规则的搜索已完成。
#  最近更新 2021-04-06 08:34:36.230443706
#  文件已经被更新。
#  更新成功。

.SECONDEXPANSION:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/init/init.o: kern/init/init.c | obj/kern/init/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
 
#  文件尚未被更新。
# 自动
# @ := obj/kern/init/init.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/init/init.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

# 不是一个目标：
kern/driver/console.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/libs/printfmt.d: libs/printfmt.c | obj/libs/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/libs/printfmt.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 84)：
	@gcc -I$(dir libs/printfmt.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/  -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

# 不是一个目标：
kern/debug/kdebug.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

# 不是一个目标：
.DEFAULT:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
.h:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
kern/driver/intr.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/driver/console.o: kern/driver/console.c | obj/kern/driver/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/driver/console.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/driver/console.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

obj/libs/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

obj/kern/trap/trapentry.d: kern/trap/trapentry.S | obj/kern/trap/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/trap/trapentry.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/trap/trapentry.S) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

clean:
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 199)：
	-$(RM) -r $(OBJDIR) $(BINDIR)

obj/kern/driver/intr.o: kern/driver/intr.c | obj/kern/driver/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/driver/intr.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/driver/intr.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

obj/kern/trap/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

img: bin/ucore.img
#  假目标 (.PHONY的前提)。
#  对隐含规则的搜索尚未完成。
#  文件不存在。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 181)：
	$(info create img)

obj/kern/driver/picirq.d: kern/driver/picirq.c | obj/kern/driver/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/driver/picirq.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/driver/picirq.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

bin/ucore.img: bin/kernel bin/bootblock | bin/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := bin/ucore.img
# 自动
# % := 
# 自动
# * := 
# 自动
# + := bin/kernel bin/bootblock
# 自动
# | := 
# 自动
# < := bin/kernel
# 自动
# ^ := bin/kernel bin/bootblock
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 149)：
	$(V)dd if=/dev/zero of=$@ count=10000
	$(V)dd if=$(bootblock) of=$@ conv=notrunc
	$(V)dd if=$(kernel) of=$@ seek=1 conv=notrunc

obj/kern/trap/vectors.d: kern/trap/vectors.S | obj/kern/trap/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/trap/vectors.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/trap/vectors.S) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

 
# 不是一个目标：
libs/printfmt.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/libs/string.d: libs/string.c | obj/libs/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/libs/string.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 84)：
	@gcc -I$(dir libs/string.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/  -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

obj/boot/bootmain.d: boot/bootmain.c | obj/boot/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/boot/bootmain.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 90)：
	@gcc -I$(dir boot/bootmain.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Os -nostdinc -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

# 不是一个目标：
tools/kernel.ld:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/debug/kdebug.d: kern/debug/kdebug.c | obj/kern/debug/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/debug/kdebug.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/debug/kdebug.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

obj/sign/tools/sign.d: tools/sign.c | obj/sign/tools/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/sign/tools/sign.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 106)：
	@gcc -I$(dir tools/sign.c) -g -Wall -O2 -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

# 不是一个目标：
boot/bootmain.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
kern/trap/trapentry.S:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

.DELETE_ON_ERROR:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/libs/printfmt.o: libs/printfmt.c | obj/libs/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/libs/printfmt.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 84)：
	@echo + cc $<
	@gcc -I$(dir libs/printfmt.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/  -c $< -o $@

obj/kern/trap/trapentry.o: kern/trap/trapentry.S | obj/kern/trap/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/trap/trapentry.o
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@echo + cc $<
	@gcc -I$(dir kern/trap/trapentry.S) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -c $< -o $@

# 不是一个目标：
kern/driver/picirq.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 不是一个目标：
kern/trap/vectors.S:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

obj/kern/driver/:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。
#  要执行的配方 (从“Makefile”，行 168)：
	@mkdir -p $@

obj/kern/driver/clock.d: kern/driver/clock.c | obj/kern/driver/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/driver/clock.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/driver/clock.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

obj/kern/trap/trap.d: kern/trap/trap.c | obj/kern/trap/
#  对隐含规则的搜索尚未完成。
#  隐含/静态模式主干：“”
#  从不检查修改时间。
#  文件尚未被更新。
# 自动
# @ := obj/kern/trap/trap.d
# 自动
# % := 
# 自动
# * := 
# 自动
# + := 
# 自动
# | := 
# 自动
# < := 
# 自动
# ^ := 
# 自动
# ? := 
# 变量的杂凑表状态:
# 负载=8/32=25%, 重新杂凑=0, 碰撞=1/9=11%
#  要执行的配方 (从“Makefile”，行 126)：
	@gcc -I$(dir kern/trap/trap.c) -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc  -fno-stack-protector -Ilibs/ -Ikern/debug/ -Ikern/driver/ -Ikern/trap/ -Ikern/mm/ -MM $< -MT "$(patsubst %.d,%.o,$@) $@"> $@

# 不是一个目标：
libs/string.c:
#  对隐含规则的搜索尚未完成。
#  从不检查修改时间。
#  文件尚未被更新。

# 文件杂凑表状态:
 
# 负载=91/1024=9%, 重新杂凑=0, 碰撞=21/285=7%
# VPATH 搜索路径

# 没有“vpath”搜索路径。

# 没有通用搜索路径(“VPATH”变量)。

# strcache 缓冲: 1 (0) / 字串 = 154 / 空间 = 2051 B / 平均 = 13 B
# 目前缓冲: 尺寸 = 8162 B / 已用 = 2051 B / 数量 = 154 / 平均 = 13 B

# strcache 性能：查找 = 392 / 命中率 = 60%
# 杂凑表统计数据:
# 负载=154/8192=2%, 重新杂凑=0, 碰撞=17/392=4%
# 在 Thu Apr  8 16:27:51 2021
 上完成 make 数据基础
 
